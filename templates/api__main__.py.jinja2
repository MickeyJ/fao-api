from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import uvicorn

from . import current_version_prefix, api_map

# Import all the routers
{% for group_name, router_group in routers.items() %}
from .routers.{{group_name}} import {{group_name}}_api
{% endfor %}


# Create main app
app = FastAPI(
    title="Food Price Analysis API",
    description="API for analyzing global food commodity prices",
    version="1.0.0",
    docs_url="/docs",  # Put docs at root instead of /docs
    redoc_url="/redoc",
)

# Add CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:3000",
        "https://app.mickeymalotte.com",
    ],  # Next.js dev server
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

{% for group_name, router_group in routers.items() %}
app.include_router({{group_name}}_api)
{% endfor %}


# Import custom routers (this section preserved during regeneration)
try:
    from fao.src.api_custom.routers import custom_routers
    for custom_router in custom_routers:
        app.include_router(custom_router)
    print(f"✅ Loaded {len(custom_routers)} custom routers")
except ImportError as e:
    print("ℹ️  No custom routers found")
except Exception as e:
    print(f"⚠️  Error loading custom routers: {e}")

# Root endpoint
@app.get("/")
def root():
    return api_map

if __name__ == "__main__":
    import uvicorn
    import signal
    import sys

    def signal_handler(sig, frame):
        print("\nShutting down gracefully...")
        sys.exit(0)

    signal.signal(signal.SIGINT, signal_handler)
    uvicorn.run("{{ project_name }}.src.api.__main__:app", host="localhost", port=8000, reload=True)
