"""innit mate

Revision ID: cc780053078f
Revises: 
Create Date: 2025-05-29 21:25:38.167434

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cc780053078f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('areas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('fao_code', sa.Integer(), nullable=False),
    sa.Column('m49_code', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fao_code'),
    sa.UniqueConstraint('m49_code'),
    sa.UniqueConstraint('name')
    )
    op.create_index('ix_area_fao_code', 'areas', ['fao_code'], unique=False)
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(), nullable=False),
    sa.Column('currency_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('currency_code')
    )
    op.create_index('ix_currency_code', 'currencies', ['currency_code'], unique=False)
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('fao_code', sa.Integer(), nullable=False),
    sa.Column('cpc_code', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpc_code'),
    sa.UniqueConstraint('fao_code')
    )
    op.create_index('ix_item_fao_code', 'items', ['fao_code'], unique=False)
    op.create_table('anomalies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('area_id', 'item_id', name='uq_anomaly_key')
    )
    op.create_index('ix_anomaly_area_id', 'anomalies', ['area_id'], unique=False)
    op.create_index('ix_anomaly_item_id', 'anomalies', ['item_id'], unique=False)
    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('area_id', 'currency_id', 'year', 'month', name='uq_exchange_rate_key')
    )
    op.create_index('ix_exchange_rate_area_id', 'exchange_rates', ['area_id'], unique=False)
    op.create_index('ix_exchange_rate_currency_id', 'exchange_rates', ['currency_id'], unique=False)
    op.create_table('food_price_index',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('flag', sa.String(length=1), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('area_id', 'year', 'month', name='uq_price_index_key')
    )
    op.create_table('food_price_inflation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('flag', sa.String(length=1), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('area_id', 'year', 'month', name='uq_price_inflation_key')
    )
    op.create_table('item_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_id', 'area_id', 'value', 'currency', 'year', name='uq_item_price_key')
    )
    op.create_table('anomaly_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('anomaly_id', sa.Integer(), nullable=False),
    sa.Column('anomaly_type', sa.String(length=50), nullable=False),
    sa.Column('anomaly_date', sa.Date(), nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['anomaly_id'], ['anomalies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('anomaly_id', 'anomaly_type', 'anomaly_date', name='uq_anomaly_detail_key')
    )
    op.create_index('ix_anomaly_detail_anomaly_id', 'anomaly_details', ['anomaly_id'], unique=False)
    op.create_index('ix_anomaly_detail_type', 'anomaly_details', ['anomaly_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_anomaly_detail_type', table_name='anomaly_details')
    op.drop_index('ix_anomaly_detail_anomaly_id', table_name='anomaly_details')
    op.drop_table('anomaly_details')
    op.drop_table('item_prices')
    op.drop_table('food_price_inflation')
    op.drop_table('food_price_index')
    op.drop_index('ix_exchange_rate_currency_id', table_name='exchange_rates')
    op.drop_index('ix_exchange_rate_area_id', table_name='exchange_rates')
    op.drop_table('exchange_rates')
    op.drop_index('ix_anomaly_item_id', table_name='anomalies')
    op.drop_index('ix_anomaly_area_id', table_name='anomalies')
    op.drop_table('anomalies')
    op.drop_index('ix_item_fao_code', table_name='items')
    op.drop_table('items')
    op.drop_index('ix_currency_code', table_name='currencies')
    op.drop_table('currencies')
    op.drop_index('ix_area_fao_code', table_name='areas')
    op.drop_table('areas')
    # ### end Alembic commands ###
